# Generated by Django 5.2.7 on 2025-10-22 17:29

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(max_length=10, unique=True)),
                ('account_type', models.CharField(choices=[('savings', 'Savings Account'), ('current', 'Current Account'), ('domiciliary', 'Domiciliary Account')], default='savings', max_length=20)),
                ('account_name', models.CharField(max_length=255)),
                ('tier_level', models.IntegerField(choices=[(1, 'Tier 1 - Basic'), (2, 'Tier 2 - Intermediate'), (3, 'Tier 3 - Full')], default=1)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('suspended', 'Suspended'), ('closed', 'Closed')], default='pending', max_length=20)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('available_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('daily_limit', models.DecimalField(decimal_places=2, default=50000.0, max_digits=12)),
                ('single_transaction_limit', models.DecimalField(decimal_places=2, default=50000.0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activated_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='users.customuser')),
            ],
            options={
                'verbose_name': 'Bank Account',
                'verbose_name_plural': 'Bank Accounts',
                'db_table': 'bank_accounts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FundingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_type', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('ussd', 'USSD'), ('card', 'Card Payment'), ('wallet', 'Digital Wallet')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('details', models.JSONField(default=dict)),
                ('verification_required', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funding_methods', to='users.customuser')),
            ],
            options={
                'verbose_name': 'Funding Method',
                'verbose_name_plural': 'Funding Methods',
                'db_table': 'funding_methods',
            },
        ),
        migrations.CreateModel(
            name='ProductRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(choices=[('loan', 'Loan Offer'), ('savings', 'Savings Plan'), ('investment', 'Investment'), ('insurance', 'Insurance'), ('card_upgrade', 'Card Upgrade')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('eligibility_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('amount_offered', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('interest_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('tenure', models.IntegerField(blank=True, null=True)),
                ('monthly_repayment', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_expired', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_recommendations', to='users.customuser')),
            ],
            options={
                'verbose_name': 'Product Recommendation',
                'verbose_name_plural': 'Product Recommendations',
                'db_table': 'product_recommendations',
                'ordering': ['-eligibility_score'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('transfer', 'Bank Transfer'), ('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('payment', 'Payment'), ('ussd', 'USSD Transaction')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('narration', models.CharField(max_length=255)),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('beneficiary_name', models.CharField(blank=True, max_length=255)),
                ('beneficiary_account', models.CharField(blank=True, max_length=20)),
                ('beneficiary_bank', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('reversed', 'Reversed')], default='pending', max_length=20)),
                ('balance_after', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='accountz.bankaccount')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='USSDSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('ussd_code', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('reversed', 'Reversed')], default='pending', max_length=20)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accountz.bankaccount')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ussd_sessions', to='users.customuser')),
            ],
            options={
                'verbose_name': 'USSD Session',
                'verbose_name_plural': 'USSD Sessions',
                'db_table': 'ussd_sessions',
            },
        ),
        migrations.CreateModel(
            name='VirtualCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_type', models.CharField(choices=[('virtual', 'Virtual Debit Card'), ('physical', 'Physical Card')], default='virtual', max_length=10)),
                ('card_number', models.CharField(max_length=16, unique=True)),
                ('expiry_month', models.CharField(max_length=2)),
                ('expiry_year', models.CharField(max_length=4)),
                ('cvv', models.CharField(max_length=3)),
                ('daily_limit', models.DecimalField(decimal_places=2, default=50000.0, max_digits=12)),
                ('monthly_limit', models.DecimalField(decimal_places=2, default=500000.0, max_digits=12)),
                ('is_international', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blocked', 'Blocked'), ('expired', 'Expired')], default='active', max_length=10)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='virtual_cards', to='accountz.bankaccount')),
            ],
            options={
                'verbose_name': 'Virtual Card',
                'verbose_name_plural': 'Virtual Cards',
                'db_table': 'virtual_cards',
            },
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['account_number'], name='bank_accoun_account_a5c8c7_idx'),
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['user', 'status'], name='bank_accoun_user_id_cf0c2a_idx'),
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['tier_level'], name='bank_accoun_tier_le_2ab057_idx'),
        ),
        migrations.AddIndex(
            model_name='productrecommendation',
            index=models.Index(fields=['user', 'product_type'], name='product_rec_user_id_032326_idx'),
        ),
        migrations.AddIndex(
            model_name='productrecommendation',
            index=models.Index(fields=['eligibility_score'], name='product_rec_eligibi_4dbd8c_idx'),
        ),
        migrations.AddIndex(
            model_name='productrecommendation',
            index=models.Index(fields=['expires_at'], name='product_rec_expires_eeed01_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['reference'], name='transaction_referen_c33c6b_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['account', 'created_at'], name='transaction_account_6c549c_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type', 'status'], name='transaction_transac_9f5934_idx'),
        ),
        migrations.AddIndex(
            model_name='virtualcard',
            index=models.Index(fields=['card_number'], name='virtual_car_card_nu_3b3697_idx'),
        ),
        migrations.AddIndex(
            model_name='virtualcard',
            index=models.Index(fields=['account', 'status'], name='virtual_car_account_38ba2e_idx'),
        ),
    ]
