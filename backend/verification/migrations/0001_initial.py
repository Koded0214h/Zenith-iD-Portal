# Generated by Django 5.2.7 on 2025-10-22 15:31

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='VerificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('ocr_confidence_threshold', models.FloatField(default=0.7)),
                ('liveness_threshold', models.FloatField(default=0.8)),
                ('facial_match_threshold', models.FloatField(default=0.75)),
                ('gov_api_timeout', models.IntegerField(default=30)),
                ('max_retry_attempts', models.IntegerField(default=3)),
                ('auto_approval_enabled', models.BooleanField(default=True)),
                ('manual_review_threshold', models.FloatField(default=0.6)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Verification Setting',
                'verbose_name_plural': 'Verification Settings',
                'db_table': 'verification_settings',
            },
        ),
        migrations.CreateModel(
            name='IDVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_type', models.CharField(choices=[('nin', 'National ID Number (NIN)'), ('voters_card', "Voter's Card"), ('passport', 'International Passport'), ('drivers_license', "Driver's License")], max_length=20)),
                ('id_number', models.CharField(max_length=100)),
                ('id_image_front', models.ImageField(upload_to='id_documents/front/')),
                ('id_image_back', models.ImageField(blank=True, null=True, upload_to='id_documents/back/')),
                ('extracted_data', models.JSONField(default=dict)),
                ('ocr_confidence', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('government_verified', models.BooleanField(default=False)),
                ('government_response', models.JSONField(default=dict)),
                ('verification_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('verified', 'Verified'), ('failed', 'Failed'), ('manual_review', 'Manual Review')], default='pending', max_length=20)),
                ('failure_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_verifications', to='users.customuser')),
            ],
            options={
                'verbose_name': 'ID Verification',
                'verbose_name_plural': 'ID Verifications',
                'db_table': 'id_verifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GovernmentVerificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_type', models.CharField(choices=[('nin', 'NIN Verification'), ('bvn', 'BVN Verification'), ('voters', "Voter's Card Verification"), ('passport', 'Passport Verification')], max_length=20)),
                ('request_data', models.JSONField()),
                ('response_data', models.JSONField()),
                ('response_time', models.FloatField()),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('timeout', 'Timeout')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('id_verification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gov_checks', to='verification.idverification')),
            ],
            options={
                'verbose_name': 'Government Verification Log',
                'verbose_name_plural': 'Government Verification Logs',
                'db_table': 'government_verification_logs',
            },
        ),
        migrations.CreateModel(
            name='FacialVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facial_image', models.ImageField(upload_to='facial_scans/')),
                ('id_photo_extracted', models.TextField(blank=True)),
                ('liveness_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('match_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('liveness_passed', models.BooleanField(default=False)),
                ('match_passed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('landmarks_detected', models.JSONField(default=list)),
                ('processing_time', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facial_verifications', to='users.customuser')),
                ('id_verification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facial_checks', to='verification.idverification')),
            ],
            options={
                'verbose_name': 'Facial Verification',
                'verbose_name_plural': 'Facial Verifications',
                'db_table': 'facial_verifications',
            },
        ),
        migrations.AddIndex(
            model_name='idverification',
            index=models.Index(fields=['user', 'status'], name='id_verifica_user_id_e7167d_idx'),
        ),
        migrations.AddIndex(
            model_name='idverification',
            index=models.Index(fields=['id_type', 'id_number'], name='id_verifica_id_type_da32af_idx'),
        ),
        migrations.AddIndex(
            model_name='idverification',
            index=models.Index(fields=['created_at'], name='id_verifica_created_b2e353_idx'),
        ),
        migrations.AddIndex(
            model_name='governmentverificationlog',
            index=models.Index(fields=['verification_type', 'status'], name='government__verific_9b2c09_idx'),
        ),
        migrations.AddIndex(
            model_name='governmentverificationlog',
            index=models.Index(fields=['created_at'], name='government__created_cd9fba_idx'),
        ),
        migrations.AddIndex(
            model_name='facialverification',
            index=models.Index(fields=['user', 'status'], name='facial_veri_user_id_dfc7b4_idx'),
        ),
        migrations.AddIndex(
            model_name='facialverification',
            index=models.Index(fields=['liveness_score'], name='facial_veri_livenes_30b6a7_idx'),
        ),
        migrations.AddIndex(
            model_name='facialverification',
            index=models.Index(fields=['match_score'], name='facial_veri_match_s_fb6079_idx'),
        ),
    ]
