# Generated by Django 5.2.7 on 2025-10-22 16:46

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BiometricProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avg_typing_speed', models.FloatField(default=0.0)),
                ('typical_hold_times', models.JSONField(default=dict)),
                ('typical_flight_times', models.JSONField(default=dict)),
                ('avg_swipe_speed', models.FloatField(default=0.0)),
                ('typical_touch_pressure', models.FloatField(default=0.0)),
                ('common_gestures', models.JSONField(default=list)),
                ('trusted_devices', models.JSONField(default=list)),
                ('typical_locations', models.JSONField(default=list)),
                ('master_biometric_hash', models.TextField(blank=True)),
                ('profile_confidence', models.FloatField(default=0.0)),
                ('samples_collected', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='biometric_profile', to='users.customuser')),
            ],
            options={
                'verbose_name': 'Biometric Profile',
                'verbose_name_plural': 'Biometric Profiles',
                'db_table': 'biometric_profiles',
            },
        ),
        migrations.CreateModel(
            name='BiometricSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('session_type', models.CharField(choices=[('onboarding', 'Onboarding'), ('login', 'Login'), ('transaction', 'Transaction'), ('continuous', 'Continuous Authentication')], max_length=20)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('location_data', models.JSONField(blank=True, default=dict)),
                ('data_points_collected', models.IntegerField(default=0)),
                ('average_confidence', models.FloatField(default=0.0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biometric_sessions', to='users.customuser')),
            ],
            options={
                'verbose_name': 'Biometric Session',
                'verbose_name_plural': 'Biometric Sessions',
                'db_table': 'biometric_sessions',
            },
        ),
        migrations.CreateModel(
            name='BiometricVerificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_type', models.CharField(choices=[('login', 'Login Attempt'), ('transaction', 'Transaction Auth'), ('continuous', 'Continuous Auth'), ('challenge', 'Challenge Response')], max_length=20)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('suspicious', 'Suspicious'), ('inconclusive', 'Inconclusive')], max_length=20)),
                ('confidence_score', models.FloatField()),
                ('risk_score', models.FloatField()),
                ('anomaly_detected', models.BooleanField(default=False)),
                ('biometric_data', models.JSONField(default=dict)),
                ('device_fingerprint', models.CharField(max_length=255)),
                ('ip_address', models.GenericIPAddressField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='biometrics.biometricsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verification_logs', to='users.customuser')),
            ],
            options={
                'verbose_name': 'Biometric Verification Log',
                'verbose_name_plural': 'Biometric Verification Logs',
                'db_table': 'biometric_verification_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BehavioralBiometrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100)),
                ('typing_pattern', models.JSONField(default=dict)),
                ('touch_patterns', models.JSONField(default=dict)),
                ('device_characteristics', models.JSONField(default=dict)),
                ('biometric_signature', models.TextField(blank=True)),
                ('confidence_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('is_active', models.BooleanField(default=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biometrics', to='users.customuser')),
            ],
            options={
                'verbose_name': 'Behavioral Biometric',
                'verbose_name_plural': 'Behavioral Biometrics',
                'db_table': 'behavioral_biometrics',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'session_id'], name='behavioral__user_id_475f38_idx'), models.Index(fields=['user', 'created_at'], name='behavioral__user_id_2c14e2_idx'), models.Index(fields=['biometric_signature'], name='behavioral__biometr_772015_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='biometricsession',
            index=models.Index(fields=['user', 'session_type'], name='biometric_s_user_id_9a9639_idx'),
        ),
        migrations.AddIndex(
            model_name='biometricsession',
            index=models.Index(fields=['session_id'], name='biometric_s_session_7ba035_idx'),
        ),
        migrations.AddIndex(
            model_name='biometricsession',
            index=models.Index(fields=['start_time'], name='biometric_s_start_t_58ec2e_idx'),
        ),
        migrations.AddIndex(
            model_name='biometricverificationlog',
            index=models.Index(fields=['user', 'verification_type'], name='biometric_v_user_id_9ef6f2_idx'),
        ),
        migrations.AddIndex(
            model_name='biometricverificationlog',
            index=models.Index(fields=['created_at'], name='biometric_v_created_2e6d68_idx'),
        ),
        migrations.AddIndex(
            model_name='biometricverificationlog',
            index=models.Index(fields=['risk_score'], name='biometric_v_risk_sc_eccb40_idx'),
        ),
    ]
